[app:yss]
use = egg:yss

yss.postproc_dir = %(here)s/../var/postproc
yss.retime_dir = %(here)s/../var/retime

pyramid.default_locale_name = en

debugtoolbar.exclude_prefixes = /manage
                                /dav
                                /fcstatic
                                /favicon.ico
                                /sdistatic

#zodbconn.uri = file://%(here)s/../var/Data.fs?connection_cache_size=50000&blobstorage_dir=%(here)s/blobs&blobstorage_layout=bushy
zodbconn.uri = zeo://localhost:9987?cache_size=200MB&connection_cache_size=50000&blob_dir=%(here)s/../var/blobs&shared_blob_dir=true&storage=main
retry.attempts = 3

substanced.secret = seekri1
substanced.initial_login = admin
substanced.initial_password = admin
substanced.uploads_tempdir = %(here)s/../var/uploads_tmp
substanced.autosync_catalogs = true

mail.default_sender = webmaster@youshouldsing.com

redis.host = localhost
redis.port = 6379
redis.db = 0

# session settings
redis.sessions.secret = seekr1t
redis.sessions.timeout = 1200

# session cookie settings
redis.sessions.cookie_name = session
redis.sessions.cookie_max_age = 36000
redis.sessions.cookie_path = /
redis.sessions.cookie_domain =
redis.sessions.cookie_secure = False
redis.sessions.cookie_httponly = False
redis.sessions.cookie_on_exception = True

# or as individual settings (note: the URL gets preference if you do both)
redis.sessions.host = localhost
redis.sessions.port = 6379
redis.sessions.db = 0
redis.sessions.password =

# additional options can be supplied to redis-py's StrictRedis
#redis.sessions.socket_timeout =
#redis.sessions.connection_pool =
#redis.sessions.charset = utf-8
#redis.sessions.errors = strict
#redis.sessions.unix_socket_path =

# in the advanced section we'll cover how to instantiate your own client
#redis.sessions.client_callable = my.dotted.python.callable

# along with defining your own serialize and deserialize methods
#redis.sessions.serialize = cPickle.dumps
#redis.sessions.deserialize = cPickle.loads

# you can specify a prefix to be used with session keys in redis
redis.sessions.prefix = yss

# or you can supply your own UID generator callable for session keys
#redis.sessions.id_generator = niftyuid
